{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/AboutPage/AboutPage.tsx","components/TodoForm/TodoForm.tsx","components/TodoList/TodoList.tsx","pages/TodosPage/TodosPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","id","AboutPage","navigate","useNavigate","onClick","TodoForm","props","useState","title","setTitle","onChange","event","target","value","onKeyPress","key","onAdd","type","placeholder","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","checked","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","console","log","filter","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAoBeA,EAjBW,kBAEtB,8BACA,sBAAKC,UAAU,yBAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAvB,mBACA,qBAAIE,GAAG,aAAaF,UAAU,6BAA9B,UACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,qBAEF,6BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,kCCEOE,EAba,WAExB,IAAIC,EAAWC,cACf,OACI,qCACA,wCACA,mBAAGL,UAAU,OAAb,gYAED,wBAAQA,UAAU,MAAMM,QAAS,kBAAIF,GAAU,IAA/C,uC,sBCyBQG,EA7B2B,SAACC,GAEvC,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,sBAAKX,UAAU,cAAf,UACI,uBACAY,SAdc,SAACC,GACnBF,EAASE,EAAMC,OAAOC,QAclBC,WAXgB,SAACH,GACJ,UAAdA,EAAMI,MACLT,EAAMU,MAAMR,GACZC,EAAS,MASTI,MAAOL,EACPS,KAAK,OAAOjB,GAAG,QACfkB,YAAY,cAEZ,uBAAOC,QAAQ,QAAQrB,UAAU,SAAjC,4BCOGsB,EA5B0B,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAExD,OAAoB,IAAjBF,EAAMG,OACE,mBAAG1B,UAAU,SAAb,wBAIR,6BACKuB,EAAMI,KAAI,SAAAC,GACP,IAAMC,EAAU,CAAC,QAMjB,OALGD,EAAKE,WACJD,EAAQE,KAAK,aAIV,oBAAI/B,UAAW6B,EAAQG,KAAK,KAA5B,SACP,kCACI,uBAAOb,KAAK,WAAWc,QAASL,EAAKE,UAAWlB,SAAU,kBAAMa,EAASG,EAAK1B,OAC9E,iCAAO0B,EAAKlB,MAAZ,OACA,mBAAGV,UAAU,0BAA0BM,QAAS,kBAAMkB,EAASI,EAAK1B,KAApE,wBAJ0C0B,EAAK1B,UC+BnDgC,EAlDa,WACxB,MAA0BzB,mBAAkB,IAA5C,mBAAOc,EAAP,KAAcY,EAAd,KAEFC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAE1DN,EAASE,KACT,IAEFD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUpB,MAE7C,CAACA,IA4BD,OACI,qCACP,wCACD,cAAC,EAAD,CAAUL,MA7BW,SAACR,GAClB,IAAMkC,EAAiB,CACrBlC,MAAOA,EACPR,GAAI2C,KAAKC,MACThB,WAAW,GAGbK,GAAS,SAAAY,GAAI,OAAKH,GAAL,mBAAiBrB,UAwBlC,cAAC,EAAD,CAAUA,MAAOA,EAAOE,SArBA,SAACvB,GACrBiC,GAAS,SAAAY,GAAI,OAAIA,EAAKpB,KAAI,SAAAC,GACtB,OAAGA,EAAK1B,KAAOA,EACb,2BACK0B,GADL,IAEEE,WAAYF,EAAKE,aAErBkB,QAAQC,IAAI,SACPrB,UAaoCJ,SAR5B,SAACtB,GAClBiC,GAAS,SAAAY,GAAI,OAAIA,EAAKG,QAAO,SAAAtB,GAAI,OAAIA,EAAK1B,KAAQA,eCjBvCiD,EAlBH,WAIV,OACC,eAAC,IAAD,WACG,cAAC,EAAD,IACA,qBAAKnD,UAAU,YAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOoD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,eCbtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee6d6efc.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\";\n\n const Navbar: React.FC = () => (\n\n    <nav>\n    <div className=\"nav-wrapper indigo px1\">\n      <Link to='/' className=\"brand-logo\"> Logo</Link>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li>\n          <Link to='/'> ToDo</Link>\n          </li>\n        <li>\n        <Link to='/about'> About Us</Link>\n          </li>\n      </ul>\n    </div>\n  </nav>\n)\n\nexport default Navbar","import { useNavigate } from \"react-router-dom\";\n\nconst AboutPage: React.FC = () => {\n\n    let navigate = useNavigate();\n    return(\n        <>\n        <h1> About</h1>\n        <p className='text'>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Est iste asperiores sed explicabo enim quos, fugiat, omnis incidunt eligendi dolor unde consequuntur porro accusamus soluta dignissimos et exercitationem, excepturi ea quas! Pariatur sunt quis architecto nobis non itaque quos aliquam nihil deleniti nostrum, autem illo aspernatur officia consequatur vero maxime?</p>\n       \n       <button className=\"btn\" onClick={()=>navigate(-1)}>Back to the list ToDo</button>\n        </>\n    )\n}\n\nexport default AboutPage","import React, {useState} from \"react\";\n\ninterface TodoFormProps{\n     onAdd(title:string): void\n}\n\nconst TodoForm: React.FC<TodoFormProps> = (props) => {\n\n    const [title, setTitle] = useState<string>('')\n\n    const changeHandler = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.target.value)\n    }\n\n    const keyPressHandler = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        if(event.key === 'Enter'){\n            props.onAdd(title)\n            setTitle('')\n        }\n    }\n\n    return(\n        <div className=\"input-field\">\n            <input\n            onChange={changeHandler}\n            onKeyPress={keyPressHandler}\n            value={title} \n            type=\"text\" id=\"title\" \n            placeholder=\"your text\">\n            </input>\n            <label htmlFor=\"title\" className=\"active\"> your text</label>\n        </div>\n    )\n}\n\nexport default TodoForm","import React from \"react\";\nimport {ITodo} from '../../interfaces'\n\ntype TodoListProps = {\n    todos: ITodo[]\n    onToggle(id:number): void\n    onRemove(id:number): void\n}\n\nconst TodoList:React.FC<TodoListProps> = ({todos, onRemove, onToggle}) => {\n\n    if(todos.length === 0){\n        return <p className='center'>No entries</p>\n    }\n\n    return(\n       <ul>\n           {todos.map(todo => {\n               const classes = ['todo']\n               if(todo.completed){\n                   classes.push('completed')\n               }\n\n\n               return(<li className={classes.join(' ')} key={todo.id}>\n               <label>\n                   <input type='checkbox' checked={todo.completed} onChange={() => onToggle(todo.id)}/>\n                   <span>{todo.title} </span>\n                   <i className='material-icons red-text' onClick={() => onRemove(todo.id)}>delete</i>\n               </label>\n           </li> )\n           })}\n           \n       </ul>\n    )\n}\n\nexport default TodoList","import React, {useState, useEffect } from 'react';\nimport TodoForm from '../../components/TodoForm';\nimport TodoList from '../../components/TodoList';\nimport { ITodo } from '../../interfaces';\n\nconst TodosPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\n\n    setTodos(saved) \n  },[])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n\n  },[todos])\n\n  const addHandler = (title:string)=> {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    }\n    // setTodos([newTodo, ...todos])\n    setTodos(prev => [newTodo, ...todos])\n  }\n\n  const toggleHandler = (id:number) =>{\n    setTodos(prev => prev.map(todo => {\n        if(todo.id === id){\n          return{\n            ...todo,\n            completed: !todo.completed }\n        } \n        console.log('click')\n      return todo\n        })\n      )\n  }\n\n  const removeTodo = (id:number) =>{\n    setTodos(prev => prev.filter(todo => todo.id !==  id))\n  }\n    return(\n        <>\n <h1> ToDo </h1>\n<TodoForm onAdd={addHandler}/>\n\n<TodoList todos={todos} onToggle={toggleHandler} onRemove={removeTodo}/>\n        </>\n    )\n}\n\nexport default TodosPage","import {BrowserRouter, Routes, Route} from 'react-router-dom'\nimport Navbar  from './components/Navbar';\nimport AboutPage from './pages/AboutPage';\nimport TodosPage from './pages/TodosPage';\n\n\n\n\nconst App = () => {\n\n  \n\n  return (\n   <BrowserRouter>\n      <Navbar />\n      <div className='container'>\n       <Routes>\n        <Route path='/' element={<TodosPage />} />\n        <Route path='/about' element={<AboutPage />} />\n       </Routes>\n      </div>\n\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}